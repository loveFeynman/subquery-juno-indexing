specVersion: 1.0.0
name: juno-subql-starter
version: 0.0.1
runner:
  node:
    name: "@subql/node-cosmos"
    version: ">0.0.1-14"
  query:
    name: "@subql/query"
    version: "*"
description: >-
  This project can be use as a starting point for developing your Cosmos (Juno) based SubQuery project
repository: https://github.com/subquery/juno-subql-starter
schema:
  file: ./schema.graphql

network:
  chainId: juno-1
  endpoint: https://rpc.juno-1.api.onfinality.io
  chainTypes: # This is a beta feature that allows support for any Cosmos chain by importing the correct protobuf messages
   cosmos.slashing.v1beta1:
     file: "./proto/cosmos/slashing/v1beta1/tx.proto"
     messages:
      - "MsgUnjail"

dataSources:
  - kind: cosmos/Runtime
    startBlock: 4613330
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleEvent
          kind: cosmos/EventHandler
          filter:
            type: wasm
            messageFilter:
              type: "/cosmwasm.wasm.v1.MsgExecuteContract"
              # contractCall: "swap"
        #       #values: # A set of ke`Î©y/value pairs that are present in the message data
        #         #contract: "juno1v99ehkuetkpf0yxdry8ce92yeqaeaa7lyxr2aagkesrw67wcsn8qxpxay0"
        # - handler: handleMessage
        #   kind: cosmos/MessageHandler
        #   filter:
        #     type: "/cosmwasm.wasm.v1.MsgExecuteContract"
        #     # Filter to only messages with the provide_liquidity function call
        #     #contractCall: "provide_liquidity" # The name of the contract function that was called
        #     #values: # A set of key/value pairs that are present in the message data
        #       #contract: "juno1v99ehkuetkpf0yxdry8ce92yeqaeaa7lyxr2aagkesrw67wcsn8qxpxay0"
        # - handler: handleEvent
        #   kind: cosmos/EventHandler
        #   filter:
        #     type: wasm
            # messageFilter:
              # type: "/cosmwasm.wasm.v1.MsgExecuteContract"
              # contractCall field can be specified here too
              #values: # A set of key/value pairs that are present in the message data
                #contract: "juno1v99ehkuetkpf0yxdry8ce92yeqaeaa7lyxr2aagkesrw67wcsn8qxpxay0"
        # - handler: handleSwap
        #   kind: cosmos/MessageHandler
        #   filter:
        #     type: "/cosmwasm.wasm.v1.MsgExecuteContract"
        #     # Filter to only messages with the provide_liquidity function call
        #     contractCall: "swap" # The name of the contract function that was called
        #     # values: # A set of key/value pairs that are present in the message data
        #       # contract: "juno17fa8vlmw2k4hhw44qdpv9ttlf8jcke34kl60vptj5gj2q4jc58xqjzrgm4"
        # - handler: handleJunoMsg
          # kind: cosmos/MessageHandler
            # type: "/cosmwasm.wasm.v1.MsgExecuteContract"
            # Filter to only messages with the provide_liquidity function call
            # contractCall: "send" # The name of the contract function that was called
            # values: # A set of key/value pairs that are present in the message data
              # contract: "juno17fa8vlmw2k4hhw44qdpv9ttlf8jcke34kl60vptj5gj2q4jc58xqjzrgm4"
